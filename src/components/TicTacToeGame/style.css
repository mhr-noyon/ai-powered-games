/* ---------- theme (override in App.css if you like) ---------- */
:root {
     --bg: #0b0d12;
     --panel: #121621;
     --muted: #8a93a6;
     --text: #e6e9f2;
     --brand: #7c5cff;
     --brand-2: #36d1dc;
     --ring: rgba(124, 92, 255, 0.45);
     --danger: #ff5c7c;
     --success: #36d1a8;
     --warning: #f6c445;
}

/* ---------- layout ---------- */
.game-interface {
     display: grid;
     gap: 16px;
}

.main-container {
     background: var(--panel);
     border: 1px solid rgba(255, 255, 255, 0.08);
     border-radius: 16px;
     padding: 16px;
     box-shadow: 0 10px 30px rgba(0, 0, 0, 0.25);
}

/* ---------- title ---------- */
.title-container {
     text-align: center;
     padding: 8px 0 6px;
}
.title {
     margin: 0;
     font-size: 1.4rem;
     color: var(--text);
     letter-spacing: 0.3px;
}
.subtitle {
     margin: 6px 0 0;
     color: var(--muted);
     font-size: 0.95rem;
}

/* ---------- difficulty chooser (your class spelling kept) ---------- */
.choose-dificulty {
     display: grid;
     place-items: center;
     gap: 12px;
     padding: 16px;
     background: rgba(255, 255, 255, 0.03);
     border: 1px solid rgba(255, 255, 255, 0.06);
     border-radius: 14px;
}
.choose-dificulty h2 {
     margin: 0 0 6px;
     font-size: 1.1rem;
     color: var(--text);
}

.difficultyBtn {
     appearance: none;
     border: 1px solid rgba(255, 255, 255, 0.12);
     background: var(--panel);
     color: var(--text);
     padding: 10px 14px;
     border-radius: 12px;
     font-weight: 700;
     cursor: pointer;
     transition: transform 0.12s ease, box-shadow 0.12s ease,
          border-color 0.12s ease;
     min-width: 120px;
}
.difficultyBtn:hover {
     transform: translateY(-1px);
     border-color: var(--ring);
     box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25);
}
.difficultyBtn:active {
     transform: translateY(0);
}
.difficultyBtn.easy {
     border-color: rgba(54, 209, 168, 0.35);
}
.difficultyBtn.medium {
     border-color: rgba(246, 196, 69, 0.35);
}
.difficultyBtn.hard {
     border-color: rgba(255, 92, 124, 0.35);
}
.difficultyBtn:focus-visible {
     outline: 3px solid var(--ring);
     outline-offset: 2px;
}

/* ---------- status & buttons ---------- */
.current-player {
     margin: 0;
     text-align: center;
     font-size: 1.05rem;
     font-weight: 700;
     color: var(--text);
}
.current-player.human {
     color: var(--success);
}
.current-player.computer {
     color: var(--warning);
}

.win-message,
.draw-message {
     text-align: center;
     font-size: 1.15rem;
     font-weight: 800;
     margin: 4px 0 10px;
}
.win-message {
     color: var(--brand-2);
}
.draw-message {
     color: var(--muted);
}

.giveup-button,
.reset-button,
.back-button {
     appearance: none;
     border-radius: 12px;
     padding: 8px 12px;
     margin: 8px 6px 12px 0;
     border: 1px solid rgba(255, 255, 255, 0.12);
     cursor: pointer;
     font-weight: 800;
     transition: filter 0.12s, transform 0.12s, box-shadow 0.12s;
}
.reset-button {
     background: linear-gradient(135deg, var(--brand), var(--brand-2));
     color: #0b0d12;
}
.giveup-button {
     background: rgba(255, 255, 255, 0.04);
     color: var(--text);
}
.back-button {
     background: rgba(255, 255, 255, 0.02);
     color: var(--muted);
}
.giveup-button:hover,
.reset-button:hover,
.back-button:hover {
     filter: brightness(1.06);
     box-shadow: 0 8px 24px rgba(124, 92, 255, 0.18);
}
.giveup-button:active,
.reset-button:active,
.back-button:active {
     transform: translateY(1px);
}
.giveup-button:focus-visible,
.reset-button:focus-visible,
.back-button:focus-visible {
     outline: 3px solid var(--ring);
     outline-offset: 2px;
}

/* ---------- board ---------- */
.board-container {
     --cell-size: 96px;
     margin: 8px auto 0;
     display: grid;
     grid-template-columns: repeat(3, var(--cell-size));
     grid-template-rows: repeat(3, var(--cell-size));
     gap: 10px;
     user-select: none;
}
@media (max-width: 520px) {
     .board-container {
          --cell-size: 84px;
          gap: 8px;
     }
}
.board-container.no-click {
     pointer-events: none;
     filter: saturate(0.85) contrast(0.95);
}

/* ---------- cells & pieces (matches your "circle"/"cross" values) ---------- */
.cell {
     position: relative;
     border-radius: 14px;
     background: radial-gradient(
               160px 120px at 20% 10%,
               rgba(124, 92, 255, 0.2),
               transparent 60%
          ),
          linear-gradient(
               180deg,
               rgba(255, 255, 255, 0.03),
               rgba(255, 255, 255, 0.01)
          );
     border: 1px solid rgba(255, 255, 255, 0.08);
     box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.02),
          0 8px 22px rgba(0, 0, 0, 0.25);
     cursor: pointer;
     transition: transform 0.08s, border-color 0.12s, box-shadow 0.12s;
}
.cell:hover {
     transform: translateY(-1px);
     border-color: rgba(124, 92, 255, 0.35);
}
.cell:active {
     transform: translateY(0);
}

@keyframes pop {
     from {
          transform: scale(0.6);
          opacity: 0;
     }
     to {
          transform: scale(1);
          opacity: 1;
     }
}

.cell.circle::before {
     content: "";
     position: absolute;
     inset: 18%;
     border-radius: 50%;
     border: 6px solid var(--brand);
     background: transparent;
     animation: pop 160ms ease-out;
     box-shadow: 0 0 18px rgba(124, 92, 255, 0.28),
          inset 0 0 8px rgba(124, 92, 255, 0.2);
}
.cell.cross::before,
.cell.cross::after {
     content: "";
     position: absolute;
     left: 50%;
     top: 50%;
     width: 72%;
     height: 10%;
     background: linear-gradient(135deg, var(--brand), var(--brand-2));
     border-radius: 8px;
     transform-origin: center;
     animation: pop 160ms ease-out;
     box-shadow: 0 0 14px rgba(124, 92, 255, 0.28);
}
.cell.cross::before {
     transform: translate(-50%, -50%) rotate(45deg);
}
.cell.cross::after {
     transform: translate(-50%, -50%) rotate(-45deg);
}
